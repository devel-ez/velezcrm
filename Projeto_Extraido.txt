### Arquivo: C:\xampp\htdocs\velezcrm\.htaccess ###

RewriteEngine On
RewriteBase /velezcrm/

# Redireciona todas as requisições para a pasta public
RewriteCond %{THE_REQUEST} /public/([^\s?]*) [NC]
RewriteRule ^ %1 [L,NE,R=302]

RewriteRule ^((?!public/).*)$ public/$1 [L,NC]

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\.windsurfrules ###


----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\index.php ###

<?php
header('Location: public/index.php');
exit;

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\README.md ###

# VelezCRM - Sistema de Gestão para Desenvolvedores

Sistema CRM desenvolvido especialmente para desenvolvedores de sites, permitindo o gerenciamento de clientes, contratos, serviços e projetos através de um Kanban.

## Requisitos

- PHP 7.4 ou superior
- MySQL 5.7 ou superior
- Apache com mod_rewrite habilitado
- Composer (para gerenciamento de dependências)

## Instalação

1. Clone o repositório:
```bash
git clone https://github.com/seu-usuario/velezcrm.git
```

2. Configure o banco de dados:
- Crie um banco de dados MySQL
- Importe o arquivo `config/database.sql`
- Configure as credenciais do banco no arquivo `config/config.php`

3. Configure o Apache:
- Certifique-se que o mod_rewrite está habilitado
- Aponte o DocumentRoot para a pasta `public` do projeto

4. Acesse o sistema:
```
http://localhost/velezcrm
```

## Estrutura do Projeto

```
velezcrm/
├── app/
│   ├── Controllers/
│   ├── Models/
│   └── Router.php
├── config/
│   ├── config.php
│   └── database.sql
├── public/
│   ├── index.php
│   └── .htaccess
├── src/
├── views/
│   ├── layouts/
│   └── dashboard/
└── assets/
```

## Funcionalidades

- Dashboard com visão geral do sistema
- Gestão de Clientes
- Gestão de Serviços
- Gestão de Contratos
- Kanban para gerenciamento de projetos
- Configurações do sistema

## Segurança

- Autenticação de usuários
- Controle de acesso baseado em perfis
- Proteção contra SQL Injection
- Proteção contra XSS
- Senhas criptografadas

## Contribuição

Para contribuir com o projeto:

1. Faça um fork do repositório
2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Commit suas mudanças (`git commit -m 'Add some AmazingFeature'`)
4. Push para a branch (`git push origin feature/AmazingFeature`)
5. Abra um Pull Request

## Licença

Este projeto está sob a licença MIT. Veja o arquivo [LICENSE](LICENSE) para mais detalhes.

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Router.php ###

<?php
class Router {
    private $routes = [];
    
    public function get($path, $callback) {
        $this->routes['GET'][$path] = $callback;
    }
    
    public function post($path, $callback) {
        $this->routes['POST'][$path] = $callback;
    }
    
    private function matchRoute($requestPath, $routePath) {
        // Converte o padrão da rota em uma expressão regular
        $pattern = preg_replace('/\{([a-zA-Z0-9_]+)\}/', '(?P<$1>[^/]+)', $routePath);
        $pattern = '#^' . $pattern . '$#';
        
        if (preg_match($pattern, $requestPath, $matches)) {
            // Remove as chaves numéricas do array de matches
            return array_filter($matches, 'is_string', ARRAY_FILTER_USE_KEY);
        }
        
        return false;
    }
    
    public function dispatch() {
        $method = $_SERVER['REQUEST_METHOD'];
        $path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
        $path = str_replace('/velezcrm', '', $path);
        $path = $path ?: '/';
        
        // Procura por uma rota que corresponda ao padrão
        foreach ($this->routes[$method] ?? [] as $routePath => $callback) {
            $params = $this->matchRoute($path, $routePath);
            
            if ($params !== false) {
                if (is_string($callback)) {
                    list($controller, $method) = explode('@', $callback);
                    $controllerClass = "App\\Controllers\\{$controller}";
                    $controllerFile = __DIR__ . '/Controllers/' . $controller . '.php';
                    
                    if (file_exists($controllerFile)) {
                        require_once $controllerFile;
                        $controller = new $controllerClass();
                        
                        // Remove o match completo
                        unset($params[0]);
                        
                        // Chama o método do controller com os parâmetros
                        call_user_func_array([$controller, $method], $params);
                        return;
                    }
                }
            }
        }
        
        // Se nenhuma rota for encontrada
        $this->renderError(404);
    }
    
    private function renderError($code) {
        http_response_code($code);
        require __DIR__ . '/../views/errors/' . $code . '.php';
        exit;
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Controllers\ClienteController.php ###

<?php
namespace App\Controllers;

use App\Models\Cliente;

class ClienteController extends Controller {
    private $clienteModel;

    public function __construct() {
        parent::__construct();
        $this->clienteModel = new Cliente();
    }

    public function index() {
        try {
            $clientes = $this->clienteModel->listarTodos();
            $this->render('clientes/index', ['clientes' => $clientes]);
        } catch (\Exception $e) {
            $this->setFlashMessage('danger', 'Erro ao listar clientes: ' . $e->getMessage());
            $this->redirect('clientes');
        }
    }

    public function novo() {
        $this->render('clientes/form');
    }

    public function salvar() {
        try {
            // Validação dos campos obrigatórios
            if (empty($_POST['nome']) || empty($_POST['telefone'])) {
                throw new \Exception('Nome e telefone são campos obrigatórios.');
            }

            // Limpa e formata os dados
            $dados = [
                'nome' => trim($_POST['nome']),
                'telefone' => preg_replace('/[^0-9]/', '', $_POST['telefone']),
                'empresa' => isset($_POST['empresa']) ? trim($_POST['empresa']) : null,
                'cnpj' => isset($_POST['cnpj']) ? preg_replace('/[^0-9]/', '', $_POST['cnpj']) : null,
                'login_hospedagem' => isset($_POST['login_hospedagem']) ? trim($_POST['login_hospedagem']) : null,
                'senha_hospedagem' => isset($_POST['senha_hospedagem']) ? trim($_POST['senha_hospedagem']) : null,
                'login_wp' => isset($_POST['login_wp']) ? trim($_POST['login_wp']) : null,
                'senha_wp' => isset($_POST['senha_wp']) ? trim($_POST['senha_wp']) : null,
                'observacoes' => isset($_POST['observacoes']) ? trim($_POST['observacoes']) : null,
                'status' => isset($_POST['status']) ? trim($_POST['status']) : 'ativo'
            ];

            // Se tem CNPJ, valida se já existe
            if (!empty($dados['cnpj'])) {
                $id = isset($_POST['id']) ? $_POST['id'] : null;
                if ($this->clienteModel->existeCNPJ($dados['cnpj'], $id)) {
                    throw new \Exception('Já existe um cliente cadastrado com este CNPJ.');
                }
            }

            // Atualiza ou cria novo cliente
            if (isset($_POST['id']) && !empty($_POST['id'])) {
                $sucesso = $this->clienteModel->atualizar($_POST['id'], $dados);
                $mensagem = 'Cliente atualizado com sucesso!';
            } else {
                $sucesso = $this->clienteModel->criar($dados);
                $mensagem = 'Cliente cadastrado com sucesso!';
            }

            if ($sucesso) {
                $this->setFlashMessage('success', $mensagem);
                $this->redirect('clientes');
            } else {
                throw new \Exception('Erro ao salvar o cliente. Por favor, tente novamente.');
            }
        } catch (\Exception $e) {
            error_log("Erro ao salvar cliente: " . $e->getMessage());
            $this->setFlashMessage('danger', $e->getMessage());
            
            // Se for edição, volta para o formulário de edição
            if (isset($_POST['id'])) {
                $this->redirect('clientes/editar/' . $_POST['id']);
            } else {
                // Se for novo, volta para o formulário de novo
                $this->redirect('clientes/novo');
            }
        }
    }

    public function editar($id) {
        try {
            $cliente = $this->clienteModel->buscarPorId($id);
            if (!$cliente) {
                throw new \Exception('Cliente não encontrado.');
            }
            $this->render('clientes/form', ['cliente' => $cliente]);
        } catch (\Exception $e) {
            $this->setFlashMessage('danger', $e->getMessage());
            $this->redirect('clientes');
        }
    }

    public function excluir($id) {
        try {
            if ($this->clienteModel->excluir($id)) {
                $this->setFlashMessage('success', 'Cliente excluído com sucesso!');
            } else {
                throw new \Exception('Erro ao excluir o cliente.');
            }
        } catch (\Exception $e) {
            $this->setFlashMessage('danger', $e->getMessage());
        }
        $this->redirect('clientes');
    }

    public function visualizar($id) {
        $cliente = $this->clienteModel->buscarPorId($id);
        
        if (!$cliente) {
            $this->redirect('/clientes');
            return;
        }
        
        $data = [
            'pageTitle' => 'Detalhes do Cliente',
            'cliente' => $cliente
        ];
        
        $this->render('clientes/visualizar', $data);
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Controllers\Controller.php ###

<?php
namespace App\Controllers;

// Importando a classe Exception
use Exception;

class Controller {
    /**
     * Construtor da classe base
     * Inicializa recursos comuns a todos os controllers
     */
    public function __construct() {
        // Garante que a sessão está iniciada
        if (!isset($_SESSION)) {
            session_start();
        }
    }

    protected function render($view, $data = []) {
        // Adiciona a mensagem flash aos dados da view
        $flash = $this->getFlashMessage();
        if ($flash) {
            $data['flash'] = $flash;
        }

        // Extrai as variáveis do array para uso na view
        extract($data);
        
        // Inicia o buffer de saída
        ob_start();
        
        // Inclui a view específica
        $viewFile = __DIR__ . '/../../views/' . $view . '.php';
        if (file_exists($viewFile)) {
            require $viewFile;
        } else {
            throw new Exception("View {$view} não encontrada");
        }
        
        // Obtém o conteúdo do buffer
        $content = ob_get_clean();
        
        // Renderiza o layout com o conteúdo
        require __DIR__ . '/../../views/layouts/main.php';
    }
    
    protected function redirect($url) {
        header('Location: ' . BASE_URL . '/' . ltrim($url, '/'));
        exit();
    }
    
    protected function json($data) {
        header('Content-Type: application/json');
        echo json_encode($data);
        exit;
    }

    /**
     * Define uma mensagem flash para ser exibida na próxima requisição
     * @param string $tipo - Tipo da mensagem (success, error, warning, info)
     * @param string $mensagem - Conteúdo da mensagem
     */
    protected function setFlashMessage($tipo, $mensagem) {
        if (!isset($_SESSION)) {
            session_start();
        }
        $_SESSION['flash'] = [
            'tipo' => $tipo,
            'mensagem' => $mensagem
        ];
    }

    /**
     * Retorna a mensagem flash atual e a remove da sessão
     * @return array|null
     */
    protected function getFlashMessage() {
        if (isset($_SESSION['flash'])) {
            $flash = $_SESSION['flash'];
            unset($_SESSION['flash']);
            return $flash;
        }
        return null;
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Controllers\DashboardController.php ###

<?php
namespace App\Controllers;

use App\Models\Cliente;

class DashboardController extends Controller {
    private $clienteModel;

    public function __construct() {
        parent::__construct();
        $this->clienteModel = new Cliente();
    }

    public function index() {
        $data = [
            'pageTitle' => 'Dashboard',
            'totalClientes' => $this->clienteModel->contarAtivos(),
            'totalServicos' => 0,
            'totalContratos' => 0,
            'totalProjetos' => 0,
            'atividadesRecentes' => [
                [
                    'tipo' => 'info',
                    'icone' => 'info',
                    'cor' => 'info',
                    'titulo' => 'Bem-vindo ao VelezCRM!',
                    'descricao' => 'Sistema iniciado com sucesso.',
                    'data' => date('d/m/Y H:i')
                ]
            ]
        ];

        $this->render('dashboard/index', $data);
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Core\Database.php ###

<?php

namespace App\Core;

use PDO;
use PDOException;

class Database {
    private $pdo;
    private $inTransaction = false;

    /**
     * Construtor que inicializa a conexão com o banco de dados
     */
    public function __construct() {
        try {
            // Configurações do banco de dados
            $host = 'localhost';
            $dbname = 'velezcrm';
            $username = 'root';
            $password = '';
            $charset = 'utf8mb4';

            // String de conexão (DSN)
            $dsn = "mysql:host=$host;dbname=$dbname;charset=$charset";

            // Cria a conexão
            $this->pdo = new PDO($dsn, $username, $password);
            $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $this->pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
            $this->pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);
        } catch (PDOException $e) {
            error_log("Erro de conexão com o banco de dados: " . $e->getMessage());
            throw new \Exception("Erro ao conectar ao banco de dados. Por favor, tente novamente mais tarde.");
        }
    }

    /**
     * Inicia uma transação
     */
    public function beginTransaction() {
        if (!$this->inTransaction) {
            $this->pdo->beginTransaction();
            $this->inTransaction = true;
        }
    }

    /**
     * Confirma uma transação
     */
    public function commit() {
        if ($this->inTransaction) {
            $this->pdo->commit();
            $this->inTransaction = false;
        }
    }

    /**
     * Reverte uma transação
     */
    public function rollback() {
        if ($this->inTransaction) {
            $this->pdo->rollBack();
            $this->inTransaction = false;
        }
    }

    /**
     * Prepara e executa uma query SQL
     * @param string $sql Query SQL
     * @param array $params Parâmetros para bind
     * @return \PDOStatement
     */
    public function query($sql, $params = []) {
        try {
            error_log("Executando query: " . $sql);
            error_log("Parâmetros: " . json_encode($params));
            
            $stmt = $this->pdo->prepare($sql);
            
            // Bind each parameter
            foreach ($params as $key => $value) {
                $type = is_int($value) ? PDO::PARAM_INT : PDO::PARAM_STR;
                $stmt->bindValue($key, $value, $type);
            }
            
            $stmt->execute();
            return $stmt;
        } catch (PDOException $e) {
            error_log("Erro na execução da query: " . $e->getMessage());
            error_log("SQL: " . $sql);
            error_log("Parâmetros: " . json_encode($params));
            throw $e;
        }
    }

    /**
     * Retorna o ID do último registro inserido
     */
    public function lastInsertId() {
        return $this->pdo->lastInsertId();
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Models\Cliente.php ###

<?php

namespace App\Models;

use App\Core\Database;
use PDOException;

class Cliente {
    private $db;

    public function __construct() {
        $this->db = new Database();
    }

    /**
     * Lista todos os clientes cadastrados
     * @return array
     */
    public function listarTodos() {
        $sql = "SELECT * FROM clientes ORDER BY nome ASC";
        return $this->db->query($sql)->fetchAll();
    }

    /**
     * Busca um cliente pelo ID
     * @param int $id ID do cliente
     * @return array|false
     */
    public function buscarPorId($id) {
        $sql = "SELECT * FROM clientes WHERE id = :id";
        $params = [':id' => $id];
        return $this->db->query($sql, $params)->fetch();
    }

    /**
     * Verifica se já existe um cliente com o mesmo nome e telefone
     * @param string $nome Nome do cliente
     * @param string $telefone Telefone do cliente
     * @param int|null $ignorarId ID do cliente a ser ignorado na verificação (usado em atualizações)
     * @return bool
     */
    public function existeClienteComMesmosDados($nome, $telefone, $ignorarId = null) {
        $sql = "SELECT COUNT(*) FROM clientes WHERE nome = :nome AND telefone = :telefone";
        $params = [':nome' => $nome, ':telefone' => $telefone];

        if ($ignorarId) {
            $sql .= " AND id != :id";
            $params[':id'] = $ignorarId;
        }

        $count = $this->db->query($sql, $params)->fetchColumn();
        return $count > 0;
    }

    /**
     * Cria um novo cliente
     * @param array $dados Dados do cliente
     * @return bool
     */
    public function criar($dados) {
        try {
            error_log("Iniciando criação de cliente: " . json_encode($dados));
            
            // Verifica se já existe um cliente com os mesmos dados
            if ($this->existeClienteComMesmosDados($dados['nome'], $dados['telefone'])) {
                throw new \Exception("Já existe um cliente cadastrado com este nome e telefone.");
            }

            $this->db->beginTransaction();

            // Remove campos vazios
            $dados = array_filter($dados, function($value) {
                return $value !== null && $value !== '';
            });

            $campos = array_keys($dados);
            $valores = array_map(function($campo) {
                return ':' . $campo;
            }, $campos);

            $sql = "INSERT INTO clientes (" . implode(', ', $campos) . ") 
                    VALUES (" . implode(', ', $valores) . ")";

            error_log("SQL gerado: " . $sql);

            $params = array_combine($valores, array_values($dados));
            error_log("Parâmetros: " . json_encode($params));
            
            $stmt = $this->db->query($sql, $params);
            $sucesso = $stmt->execute();
            
            if ($sucesso) {
                $this->db->commit();
                error_log("Cliente criado com sucesso!");
                return true;
            } else {
                $this->db->rollback();
                error_log("Erro ao executar query de inserção");
                return false;
            }
        } catch (PDOException $e) {
            $this->db->rollback();
            error_log("Erro PDO ao criar cliente: " . $e->getMessage());
            error_log("Código do erro: " . $e->getCode());
            throw new \Exception("Erro ao salvar o cliente no banco de dados: " . $e->getMessage());
        } catch (\Exception $e) {
            $this->db->rollback();
            error_log("Erro ao criar cliente: " . $e->getMessage());
            throw $e;
        }
    }

    /**
     * Atualiza os dados de um cliente
     * @param int $id ID do cliente
     * @param array $dados Dados do cliente
     * @return bool
     */
    public function atualizar($id, $dados) {
        try {
            error_log("Iniciando atualização do cliente {$id}: " . json_encode($dados));
            
            // Verifica se já existe um cliente com os mesmos dados
            if ($this->existeClienteComMesmosDados($dados['nome'], $dados['telefone'], $id)) {
                throw new \Exception("Já existe um cliente cadastrado com este nome e telefone.");
            }

            $this->db->beginTransaction();

            // Remove campos vazios
            $dados = array_filter($dados, function($value) {
                return $value !== null && $value !== '';
            });

            $sets = array_map(function($campo) {
                return "$campo = :$campo";
            }, array_keys($dados));

            $sql = "UPDATE clientes SET " . implode(', ', $sets) . " WHERE id = :id";
            error_log("SQL gerado: " . $sql);
            
            $params = array_combine(
                array_map(function($campo) { return ':' . $campo; }, array_keys($dados)),
                array_values($dados)
            );
            $params[':id'] = $id;
            error_log("Parâmetros: " . json_encode($params));

            $stmt = $this->db->query($sql, $params);
            $sucesso = $stmt->execute();
            
            if ($sucesso) {
                $this->db->commit();
                error_log("Cliente atualizado com sucesso!");
                return true;
            } else {
                $this->db->rollback();
                error_log("Erro ao executar query de atualização");
                return false;
            }
        } catch (PDOException $e) {
            $this->db->rollback();
            error_log("Erro PDO ao atualizar cliente: " . $e->getMessage());
            error_log("Código do erro: " . $e->getCode());
            throw new \Exception("Erro ao atualizar o cliente no banco de dados: " . $e->getMessage());
        } catch (\Exception $e) {
            $this->db->rollback();
            error_log("Erro ao atualizar cliente: " . $e->getMessage());
            throw $e;
        }
    }

    /**
     * Exclui um cliente
     * @param int $id ID do cliente
     * @return bool
     */
    public function excluir($id) {
        try {
            $this->db->beginTransaction();

            $sql = "DELETE FROM clientes WHERE id = :id";
            $params = [':id' => $id];
            
            $stmt = $this->db->query($sql, $params);
            $sucesso = $stmt->execute();
            
            if ($sucesso) {
                $this->db->commit();
                return true;
            } else {
                $this->db->rollback();
                return false;
            }
        } catch (\Exception $e) {
            $this->db->rollback();
            error_log("Erro ao excluir cliente: " . $e->getMessage());
            return false;
        }
    }

    /**
     * Verifica se um cliente já existe pelo CNPJ
     * @param string $cnpj CNPJ do cliente
     * @param int|null $ignorarId ID do cliente a ser ignorado na verificação (usado em atualizações)
     * @return bool
     */
    public function existeCNPJ($cnpj, $ignorarId = null) {
        $sql = "SELECT COUNT(*) FROM clientes WHERE cnpj = :cnpj";
        $params = [':cnpj' => $cnpj];

        if ($ignorarId) {
            $sql .= " AND id != :id";
            $params[':id'] = $ignorarId;
        }

        $count = $this->db->query($sql, $params)->fetchColumn();
        return $count > 0;
    }

    /**
     * Conta o total de clientes ativos
     * @return int Total de clientes ativos
     */
    public function contarAtivos() {
        try {
            $sql = "SELECT COUNT(*) FROM clientes WHERE status = 'ativo'";
            return (int) $this->db->query($sql)->fetchColumn();
        } catch (\Exception $e) {
            error_log("Erro ao contar clientes ativos: " . $e->getMessage());
            return 0;
        }
    }

    /**
     * Retorna os últimos clientes cadastrados
     * @param int $limite Número máximo de clientes a retornar
     * @return array Lista dos últimos clientes
     */
    public function buscarUltimos($limite = 5) {
        try {
            $sql = "SELECT * FROM clientes ORDER BY id DESC LIMIT :limite";
            return $this->db->query($sql, [':limite' => $limite])->fetchAll();
        } catch (\Exception $e) {
            error_log("Erro ao buscar últimos clientes: " . $e->getMessage());
            return [];
        }
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\app\Models\Database.php ###

<?php
namespace App\Models;

use PDO;
use PDOException;

class Database {
    private static $instance = null;
    private $conn;
    
    private function __construct() {
        try {
            // Cria a conexão com o banco de dados usando as constantes definidas
            $this->conn = new PDO(
                "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME . ";charset=utf8mb4",
                DB_USER,
                DB_PASS,
                [
                    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
                    PDO::ATTR_EMULATE_PREPARES => false
                ]
            );
        } catch (PDOException $e) {
            // Em caso de erro, exibe uma mensagem amigável
            die("Erro ao conectar ao banco de dados: " . $e->getMessage());
        }
    }
    
    // Implementa o padrão Singleton para garantir apenas uma conexão
    public static function getInstance() {
        if (self::$instance === null) {
            self::$instance = new self();
        }
        return self::$instance;
    }
    
    // Retorna a conexão ativa
    public function getConnection() {
        return $this->conn;
    }
}

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\config\config.php ###

<?php
// Configurações do Banco de Dados
define('DB_HOST', 'localhost');
define('DB_USER', 'root');
define('DB_PASS', '');
define('DB_NAME', 'velezcrm');

// URL Base do sistema
define('BASE_URL', 'http://localhost/velezcrm');

// Configurações de timezone
date_default_timezone_set('America/Sao_Paulo');

// Configurações de erro
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Autoload de classes
spl_autoload_register(function ($class) {
    $file = __DIR__ . '/../' . str_replace('\\', '/', $class) . '.php';
    if (file_exists($file)) {
        require_once $file;
    }
});

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\config\database.sql ###

-- Criação do banco de dados
CREATE DATABASE IF NOT EXISTS velezcrm CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

USE velezcrm;

-- Tabela de clientes
CREATE TABLE IF NOT EXISTS clientes (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(100) NOT NULL,
  `telefone` varchar(20) NOT NULL,
  `empresa` varchar(100) DEFAULT NULL,
  `cnpj` varchar(20) DEFAULT NULL,
  `login_hospedagem` varchar(100) DEFAULT NULL,
  `senha_hospedagem` varchar(100) DEFAULT NULL,
  `login_wp` varchar(100) DEFAULT NULL,
  `senha_wp` varchar(100) DEFAULT NULL,
  `observacoes` text DEFAULT NULL,
  `status` enum('ativo','inativo','pendente') NOT NULL DEFAULT 'ativo',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- Tabela de serviços
CREATE TABLE IF NOT EXISTS servicos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    valor DECIMAL(10,2),
    status ENUM('ativo', 'inativo') DEFAULT 'ativo'
);

-- Tabela de contratos
CREATE TABLE IF NOT EXISTS contratos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cliente_id INT,
    servico_id INT,
    data_inicio DATE,
    data_fim DATE,
    valor_total DECIMAL(10,2),
    status ENUM('em_andamento', 'concluido', 'cancelado') DEFAULT 'em_andamento',
    observacoes TEXT,
    FOREIGN KEY (cliente_id) REFERENCES clientes(id),
    FOREIGN KEY (servico_id) REFERENCES servicos(id)
);

-- Tabela de projetos (Kanban)
CREATE TABLE IF NOT EXISTS projetos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    contrato_id INT,
    titulo VARCHAR(100) NOT NULL,
    descricao TEXT,
    status ENUM('backlog', 'todo', 'doing', 'done') DEFAULT 'backlog',
    prioridade ENUM('baixa', 'media', 'alta') DEFAULT 'media',
    data_inicio DATE,
    data_fim DATE,
    FOREIGN KEY (contrato_id) REFERENCES contratos(id)
);

-- Tabela de usuários
CREATE TABLE IF NOT EXISTS usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    tipo ENUM('admin', 'usuario') DEFAULT 'usuario',
    status ENUM('ativo', 'inativo') DEFAULT 'ativo',
    data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP
);

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\database\migrations\002_adicionar_campos_clientes.sql ###


----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\public\.htaccess ###

RewriteEngine On

# Se o arquivo ou diretório não existe, redireciona para index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [QSA,L]

# Permitir acesso a arquivos e diretórios existentes
<IfModule mod_negotiation.c>
    Options -MultiViews
</IfModule>

# Prevenir listagem de diretórios
Options -Indexes

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\public\index.php ###

<?php
session_start();

// Carrega as configurações
require_once __DIR__ . '/../config/config.php';

// Carrega o Router
require_once __DIR__ . '/../app/Router.php';

// Inicializa o router
$router = new Router();

// Define as rotas
$router->get('/', 'DashboardController@index');

// Rotas de Clientes
$router->get('/clientes', 'ClienteController@index');
$router->get('/clientes/novo', 'ClienteController@novo');
$router->post('/clientes/salvar', 'ClienteController@salvar');
$router->get('/clientes/editar/{id}', 'ClienteController@editar');
$router->get('/clientes/visualizar/{id}', 'ClienteController@visualizar');
$router->get('/clientes/excluir/{id}', 'ClienteController@excluir');

// Outras rotas
$router->get('/servicos', 'ServicoController@index');
$router->get('/contratos', 'ContratoController@index');
$router->get('/kanban', 'KanbanController@index');
$router->get('/configuracoes', 'ConfiguracaoController@index');

// Executa o router
$router->dispatch();

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\clientes\form.php ###

<?php
// Verifica se há mensagem flash para exibir
if (isset($flash)): ?>
    <div class="alert alert-<?php echo $flash['tipo']; ?> alert-dismissible fade show" role="alert">
        <?php echo $flash['mensagem']; ?>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
<?php endif; ?>

<div class="row mb-4">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><?php echo isset($cliente) ? 'Editar Cliente' : 'Novo Cliente'; ?></h3>
            </div>
            <div class="card-body">
                <form id="formCliente" action="<?php echo BASE_URL . '/clientes/salvar'; ?>" method="POST">
                    <?php if (isset($cliente) && isset($cliente['id'])): ?>
                        <input type="hidden" name="id" value="<?php echo htmlspecialchars($cliente['id']); ?>">
                    <?php endif; ?>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="nome" class="form-label">Nome *</label>
                            <input type="text" class="form-control" id="nome" name="nome" required 
                                   value="<?php echo isset($cliente['nome']) ? htmlspecialchars($cliente['nome']) : ''; ?>">
                        </div>
                        <div class="col-md-6">
                            <label for="telefone" class="form-label">Telefone *</label>
                            <input type="text" class="form-control telefone" id="telefone" name="telefone" required
                                   value="<?php echo isset($cliente['telefone']) ? htmlspecialchars($cliente['telefone']) : ''; ?>">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="empresa" class="form-label">Empresa</label>
                            <input type="text" class="form-control" id="empresa" name="empresa"
                                   value="<?php echo isset($cliente['empresa']) ? htmlspecialchars($cliente['empresa']) : ''; ?>">
                        </div>
                        <div class="col-md-6">
                            <label for="cnpj" class="form-label">CNPJ</label>
                            <input type="text" class="form-control cnpj" id="cnpj" name="cnpj"
                                   value="<?php echo isset($cliente['cnpj']) ? htmlspecialchars($cliente['cnpj']) : ''; ?>">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="login_hospedagem" class="form-label">Login Hospedagem</label>
                            <input type="text" class="form-control" id="login_hospedagem" name="login_hospedagem"
                                   value="<?php echo isset($cliente['login_hospedagem']) ? htmlspecialchars($cliente['login_hospedagem']) : ''; ?>">
                        </div>
                        <div class="col-md-6">
                            <label for="senha_hospedagem" class="form-label">Senha Hospedagem</label>
                            <input type="text" class="form-control" id="senha_hospedagem" name="senha_hospedagem"
                                   value="<?php echo isset($cliente['senha_hospedagem']) ? htmlspecialchars($cliente['senha_hospedagem']) : ''; ?>">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="login_wp" class="form-label">Login WordPress</label>
                            <input type="text" class="form-control" id="login_wp" name="login_wp"
                                   value="<?php echo isset($cliente['login_wp']) ? htmlspecialchars($cliente['login_wp']) : ''; ?>">
                        </div>
                        <div class="col-md-6">
                            <label for="senha_wp" class="form-label">Senha WordPress</label>
                            <input type="text" class="form-control" id="senha_wp" name="senha_wp"
                                   value="<?php echo isset($cliente['senha_wp']) ? htmlspecialchars($cliente['senha_wp']) : ''; ?>">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="observacoes" class="form-label">Observações</label>
                        <textarea class="form-control" id="observacoes" name="observacoes" rows="3"><?php echo isset($cliente['observacoes']) ? htmlspecialchars($cliente['observacoes']) : ''; ?></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="status" class="form-label">Status</label>
                        <select class="form-select" id="status" name="status">
                            <option value="ativo" <?php echo (isset($cliente['status']) && $cliente['status'] == 'ativo') ? 'selected' : ''; ?>>Ativo</option>
                            <option value="inativo" <?php echo (isset($cliente['status']) && $cliente['status'] == 'inativo') ? 'selected' : ''; ?>>Inativo</option>
                            <option value="pendente" <?php echo (isset($cliente['status']) && $cliente['status'] == 'pendente') ? 'selected' : ''; ?>>Pendente</option>
                        </select>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>Salvar
                        </button>
                        <a href="<?php echo BASE_URL . '/clientes'; ?>" class="btn btn-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Voltar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Certifique-se de que o IMask está incluído no layout -->
<script src="https://unpkg.com/imask"></script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Máscara para telefone
    const telefoneInput = document.querySelector('.telefone');
    if (telefoneInput) {
        IMask(telefoneInput, {
            mask: '(00) 00000-0000'
        });
    }

    // Máscara para CNPJ
    const cnpjInput = document.querySelector('.cnpj');
    if (cnpjInput) {
        IMask(cnpjInput, {
            mask: '00.000.000/0000-00'
        });
    }

    // Validação e envio do formulário
    const form = document.getElementById('formCliente');
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Validar campos obrigatórios
        const nome = document.getElementById('nome').value.trim();
        const telefone = document.getElementById('telefone').value.trim();
        
        if (!nome || !telefone) {
            alert('Por favor, preencha os campos obrigatórios (Nome e Telefone).');
            return;
        }
        
        // Se passou pela validação, envia o formulário
        this.submit();
    });
});</script>

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\clientes\index.php ###

<div class="row mb-4">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Lista de Clientes</h3>
                    <a href="<?php echo BASE_URL; ?>/clientes/novo" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Novo Cliente
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nome</th>
                                <th>Email</th>
                                <th>Telefone</th>
                                <th>Empresa</th>
                                <th>Status</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php if (empty($clientes)): ?>
                            <tr>
                                <td colspan="7" class="text-center">Nenhum cliente cadastrado</td>
                            </tr>
                            <?php else: ?>
                                <?php foreach ($clientes as $cliente): ?>
                                <tr>
                                    <td><?php echo $cliente['id']; ?></td>
                                    <td><?php echo $cliente['nome']; ?></td>
                                    <td><?php echo $cliente['email']; ?></td>
                                    <td><?php echo $cliente['telefone']; ?></td>
                                    <td><?php echo $cliente['empresa']; ?></td>
                                    <td>
                                        <span class="badge <?php echo $cliente['status'] === 'ativo' ? 'bg-success' : 'bg-danger'; ?>">
                                            <?php echo ucfirst($cliente['status']); ?>
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="<?php echo BASE_URL; ?>/clientes/editar/<?php echo $cliente['id']; ?>" 
                                               class="btn btn-sm btn-info" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="<?php echo BASE_URL; ?>/clientes/visualizar/<?php echo $cliente['id']; ?>" 
                                               class="btn btn-sm btn-success" title="Visualizar">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-danger" title="Excluir"
                                                    onclick="confirmarExclusao(<?php echo $cliente['id']; ?>)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <?php endforeach; ?>
                            <?php endif; ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function confirmarExclusao(id) {
    if (confirm('Tem certeza que deseja excluir este cliente?')) {
        window.location.href = `${BASE_URL}/clientes/excluir/${id}`;
    }
}
</script>

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\clientes\visualizar.php ###

<div class="row mb-4">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Detalhes do Cliente</h3>
                    <div>
                        <a href="<?php echo BASE_URL; ?>/clientes/editar/<?php echo $cliente['id']; ?>" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Editar
                        </a>
                        <a href="<?php echo BASE_URL; ?>/clientes" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Voltar
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Informações Básicas</h5>
                        <table class="table table-striped">
                            <tr>
                                <th width="30%">Nome</th>
                                <td><?php echo $cliente['nome']; ?></td>
                            </tr>
                            <tr>
                                <th>Email</th>
                                <td><?php echo $cliente['email']; ?></td>
                            </tr>
                            <tr>
                                <th>Telefone</th>
                                <td><?php echo $cliente['telefone']; ?></td>
                            </tr>
                            <tr>
                                <th>Status</th>
                                <td>
                                    <span class="badge <?php echo $cliente['status'] === 'ativo' ? 'bg-success' : 'bg-danger'; ?>">
                                        <?php echo ucfirst($cliente['status']); ?>
                                    </span>
                                </td>
                            </tr>
                        </table>
                    </div>
                    
                    <div class="col-md-6">
                        <h5>Informações da Empresa</h5>
                        <table class="table table-striped">
                            <tr>
                                <th width="30%">Empresa</th>
                                <td><?php echo $cliente['empresa']; ?></td>
                            </tr>
                            <tr>
                                <th>CNPJ</th>
                                <td><?php echo $cliente['cnpj']; ?></td>
                            </tr>
                            <tr>
                                <th>Endereço</th>
                                <td><?php echo $cliente['endereco']; ?></td>
                            </tr>
                            <tr>
                                <th>Cidade/Estado</th>
                                <td><?php echo $cliente['cidade']; ?>/<?php echo $cliente['estado']; ?></td>
                            </tr>
                            <tr>
                                <th>CEP</th>
                                <td><?php echo $cliente['cep']; ?></td>
                            </tr>
                        </table>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-12">
                        <h5>Contratos</h5>
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Serviço</th>
                                    <th>Data Início</th>
                                    <th>Data Fim</th>
                                    <th>Valor</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="6" class="text-center">Nenhum contrato encontrado</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\dashboard\index.php ###

<div class="row">
    <div class="col-lg-3 col-6">
        <div class="small-box bg-info">
            <div class="inner">
                <h3><?php echo $totalClientes; ?></h3>
                <p>Clientes Ativos</p>
            </div>
            <div class="icon">
                <i class="fas fa-users"></i>
            </div>
            <a href="/clientes" class="small-box-footer">
                Mais informações <i class="fas fa-arrow-circle-right"></i>
            </a>
        </div>
    </div>
    
    <div class="col-lg-3 col-6">
        <div class="small-box bg-success">
            <div class="inner">
                <h3><?php echo $totalServicos; ?></h3>
                <p>Serviços</p>
            </div>
            <div class="icon">
                <i class="fas fa-cogs"></i>
            </div>
            <a href="/servicos" class="small-box-footer">
                Mais informações <i class="fas fa-arrow-circle-right"></i>
            </a>
        </div>
    </div>
    
    <div class="col-lg-3 col-6">
        <div class="small-box bg-warning">
            <div class="inner">
                <h3><?php echo $totalContratos; ?></h3>
                <p>Contratos Ativos</p>
            </div>
            <div class="icon">
                <i class="fas fa-file-contract"></i>
            </div>
            <a href="/contratos" class="small-box-footer">
                Mais informações <i class="fas fa-arrow-circle-right"></i>
            </a>
        </div>
    </div>
    
    <div class="col-lg-3 col-6">
        <div class="small-box bg-danger">
            <div class="inner">
                <h3><?php echo $totalProjetos; ?></h3>
                <p>Projetos em Andamento</p>
            </div>
            <div class="icon">
                <i class="fas fa-project-diagram"></i>
            </div>
            <a href="/kanban" class="small-box-footer">
                Mais informações <i class="fas fa-arrow-circle-right"></i>
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Últimos Projetos</h3>
            </div>
            <div class="card-body p-0">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Cliente</th>
                            <th>Projeto</th>
                            <th>Status</th>
                            <th>Progresso</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan="4" class="text-center">Nenhum projeto encontrado</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Atividades Recentes</h3>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div>
                        <i class="fas fa-user bg-info"></i>
                        <div class="timeline-item">
                            <span class="time"><i class="fas fa-clock"></i> Agora</span>
                            <h3 class="timeline-header">Bem-vindo ao VelezCRM!</h3>
                            <div class="timeline-body">
                                Sistema iniciado com sucesso. Configure seus primeiros clientes e projetos.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\errors\404.php ###

<div class="error-page">
    <h2 class="headline text-warning">404</h2>
    <div class="error-content">
        <h3><i class="fas fa-exclamation-triangle text-warning"></i> Oops! Página não encontrada.</h3>
        <p>
            Não foi possível encontrar a página que você está procurando.
            Enquanto isso, você pode <a href="/">retornar ao dashboard</a>.
        </p>
    </div>
</div>

----------------------------------

### Arquivo: C:\xampp\htdocs\velezcrm\views\layouts\main.php ###

<!DOCTYPE html>
<html lang="pt-BR" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VelezCRM - <?php echo $pageTitle ?? 'Sistema de Gestão'; ?></title>
    
    <!-- Bootstrap 5 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Custom CSS -->
    <style>
        /* Tema Claro */
        [data-bs-theme="light"] {
            --bg-primary: #f0f2f5;
            --bg-secondary: #ffffff;
            --text-primary: #111827;
            --text-secondary: #374151;
            --border-color: #d1d5db;
            --hover-bg: #3a4654;
            --link-color: #2563eb;
            --link-hover: #1d4ed8;
            --card-shadow: 0 2px 4px rgba(0,0,0,0.1);
            --header-bg: #ffffff;
        }
        
        /* Ajustes específicos para tema claro */
        [data-bs-theme="light"] .navbar-vertical {
            background: #2a3441;
            border-right: 1px solid #3a4654;
        }
        
        [data-bs-theme="light"] .navbar-brand {
            border-bottom: 1px solid #3a4654;
        }
        
        [data-bs-theme="light"] .brand-text {
            color: #ffffff;
        }
        
        [data-bs-theme="light"] .nav-link {
            color: #a3b2c7 !important;
        }
        
        [data-bs-theme="light"] .nav-link:hover,
        [data-bs-theme="light"] .nav-link.active {
            color: #ffffff !important;
            background: #3a4654;
        }
        
        [data-bs-theme="light"] .sidebar-collapse .navbar-vertical {
            background: #2a3441;
        }
        
        /* Tema Escuro */
        [data-bs-theme="dark"] {
            --bg-primary: #1e2936;
            --bg-secondary: #2a3441;
            --text-primary: #ffffff;
            --text-secondary: #a3b2c7;
            --border-color: #3a4654;
            --hover-bg: #3a4654;
            --link-color: #60a5fa;
            --link-hover: #3b82f6;
            --card-shadow: 0 2px 4px rgba(0,0,0,0.2);
            --header-bg: #2a3441;
        }
        
        /* Ajustes específicos para tema escuro */
        [data-bs-theme="dark"] .navbar-vertical {
            background: #2a3441;
            border-right: 1px solid #3a4654;
        }
        
        [data-bs-theme="dark"] .card {
            background: #2a3441;
            border: 1px solid #3a4654;
        }
        
        [data-bs-theme="dark"] .table {
            color: #a3b2c7;
        }
        
        [data-bs-theme="dark"] .table thead th {
            color: #ffffff;
            border-bottom-color: #3a4654;
            background-color: #2a3441;
        }
        
        [data-bs-theme="dark"] .table td {
            border-color: #3a4654;
        }
        
        [data-bs-theme="dark"] .dropdown-menu {
            background: #2a3441;
            border: 1px solid #3a4654;
        }
        
        [data-bs-theme="dark"] .dropdown-item {
            color: #a3b2c7;
        }
        
        [data-bs-theme="dark"] .dropdown-item:hover {
            background: #3a4654;
            color: #ffffff;
        }
        
        [data-bs-theme="dark"] .dropdown-divider {
            border-color: #3a4654;
        }
        
        [data-bs-theme="dark"] .theme-toggle {
            background: #2a3441;
            border: 1px solid #3a4654;
            color: #a3b2c7;
        }
        
        [data-bs-theme="dark"] .theme-toggle:hover {
            background: #3a4654;
            color: #ffffff;
        }
        
        [data-bs-theme="dark"] .nav-link {
            color: #a3b2c7 !important;
        }
        
        [data-bs-theme="dark"] .nav-link:hover,
        [data-bs-theme="dark"] .nav-link.active {
            color: #ffffff !important;
            background: #3a4654;
        }
        
        /* Ajustes dos gráficos no tema escuro */
        [data-bs-theme="dark"] .progress {
            background-color: #3a4654;
        }
        
        [data-bs-theme="dark"] .timeline-item {
            background-color: #2a3441;
            border: 1px solid #3a4654;
        }
        
        [data-bs-theme="dark"] .timeline-header {
            border-bottom: 1px solid #3a4654;
        }
        
        /* Cores dos cards de estatísticas */
        .bg-info { background-color: #0284c7 !important; }
        .bg-success { background-color: #059669 !important; }
        .bg-warning { background-color: #d97706 !important; }
        .bg-danger { background-color: #dc2626 !important; }
        
        .table {
            color: var(--text-secondary);
        }
        
        .table thead th {
            border-bottom-color: var(--border-color);
            color: var(--text-primary);
        }
        
        .table td {
            border-bottom-color: var(--border-color);
        }
        
        .theme-toggle {
            padding: 8px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .theme-toggle:hover {
            background: var(--hover-bg);
            color: #fff;
        }
        
        /* Adiciona estilo para o sidebar recolhido */
        body.sidebar-collapse .navbar-vertical {
            width: 4.6rem;
            z-index: 1021;
        }
        
        body.sidebar-collapse .content {
            margin-left: 4.6rem;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link p,
        body.sidebar-collapse .navbar-vertical .brand-text {
            display: none;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link {
            padding: 12px;
            margin: 4px 8px;
            text-align: center;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link i {
            margin: 0;
            font-size: 1.2rem;
        }
        
        /* Transição suave ao recolher/expandir */
        .navbar-vertical,
        .content,
        .nav-link,
        .nav-link p,
        .brand-text {
            transition: all 0.3s ease-in-out;
        }
        
        /* Estilo do botão push menu */
        .push-menu-btn {
            padding: 8px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.3s;
            margin-right: 1rem;
        }
        
        .push-menu-btn:hover {
            background: var(--hover-bg);
            color: #fff;
        }
        
        body {
            background-color: var(--bg-primary);
            color: var(--text-secondary);
            min-height: 100vh;
            transition: all 0.3s ease;
        }
        
        .navbar-vertical {
            width: 250px;
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            background: var(--bg-secondary);
            border-right: 1px solid var(--border-color);
            z-index: 1000;
            transition: all 0.3s ease;
        }
        
        .content {
            margin-left: 250px;
            padding: 20px;
            min-height: 100vh;
            background-color: var(--bg-primary);
            transition: all 0.3s ease;
        }
        
        .navbar-brand {
            padding: 1rem;
            border-bottom: 1px solid var(--border-color);
        }
        
        .brand-text {
            font-size: 1.25rem;
            font-weight: 500;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.8rem 1rem;
            margin: 2px 15px;
            border-radius: 8px;
            transition: all 0.3s;
            color: var(--text-secondary) !important;
        }
        
        .nav-link i {
            width: 1.5rem;
            text-align: center;
            margin-right: 0.5rem;
            font-size: 1rem;
        }
        
        .nav-link p {
            margin: 0;
            font-size: 0.9rem;
            font-weight: 400;
        }
        
        /* Ajustes quando o menu está recolhido */
        body.sidebar-collapse .navbar-vertical {
            width: 4.6rem;
        }
        
        body.sidebar-collapse .content {
            margin-left: 4.6rem;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link {
            padding: 0.8rem;
            margin: 2px 8px;
            justify-content: center;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link i {
            margin: 0;
            width: auto;
        }
        
        h2 {
            font-size: 1.5rem;
            font-weight: 500;
            color: var(--text-primary);
        }
        
        h3 {
            font-size: 1.25rem;
            font-weight: 500;
        }
        
        .card-title {
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 0;
        }
        
        .card {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 12px;
        }
        
        .card-header {
            background: transparent;
            border-bottom: 1px solid var(--border-color);
        }
        
        .small-box {
            position: relative;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 12px;
            color: #fff;
            transition: all 0.3s;
            overflow: hidden;
        }
        
        .small-box:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .small-box .inner {
            position: relative;
            z-index: 2;
        }
        
        .small-box .icon {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 50px;
            opacity: 0.3;
            z-index: 1;
        }
        
        .small-box h3 {
            font-size: 36px;
            margin: 0;
            font-weight: bold;
            color: #fff;
        }
        
        .small-box p {
            font-size: 14px;
            margin: 5px 0 0;
            color: rgba(255,255,255,0.8);
        }
        
        .small-box .small-box-footer {
            position: relative;
            text-align: center;
            padding: 3px 0;
            color: rgba(255,255,255,0.8);
            display: block;
            background: rgba(0,0,0,0.1);
            text-decoration: none;
            margin: 15px -20px -20px;
        }
        
        .small-box .small-box-footer:hover {
            color: #fff;
            background: rgba(0,0,0,0.2);
        }
        
        .bg-info { background: #0ea5e9 !important; }
        .bg-success { background: #22c55e !important; }
        .bg-warning { background: #eab308 !important; }
        .bg-danger { background: #ef4444 !important; }
        
        .table {
            color: var(--text-secondary);
        }
        
        .table thead th {
            border-bottom-color: var(--border-color);
            color: var(--text-primary);
        }
        
        .table td {
            border-bottom-color: var(--border-color);
        }
        
        .theme-toggle {
            padding: 8px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .theme-toggle:hover {
            background: var(--hover-bg);
            color: #fff;
        }
        
        /* Adiciona estilo para o sidebar recolhido */
        body.sidebar-collapse .navbar-vertical {
            width: 4.6rem;
            z-index: 1021;
        }
        
        body.sidebar-collapse .content {
            margin-left: 4.6rem;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link p,
        body.sidebar-collapse .navbar-vertical .brand-text {
            display: none;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link {
            padding: 12px;
            margin: 4px 8px;
            text-align: center;
        }
        
        body.sidebar-collapse .navbar-vertical .nav-link i {
            margin: 0;
            font-size: 1.2rem;
        }
        
        /* Transição suave ao recolher/expandir */
        .navbar-vertical,
        .content,
        .nav-link,
        .nav-link p,
        .brand-text {
            transition: all 0.3s ease-in-out;
        }
        
        /* Estilo do botão push menu */
        .push-menu-btn {
            padding: 8px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.3s;
            margin-right: 1rem;
        }
        
        .push-menu-btn:hover {
            background: var(--hover-bg);
            color: #fff;
        }
    </style>
</head>
<body class="hold-transition">
    <!-- Menu Lateral -->
    <nav class="navbar-vertical">
        <div class="navbar-brand">
            <a href="<?php echo BASE_URL; ?>" class="text-decoration-none">
                <h3 class="text-primary mb-0 brand-text">VelezCRM</h3>
            </a>
        </div>
        
        <ul class="nav flex-column mt-4">
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>">
                    <i class="fas fa-tachometer-alt me-2"></i>
                    <p>Dashboard</p>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>/clientes">
                    <i class="fas fa-users me-2"></i>
                    <p>Clientes</p>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>/servicos">
                    <i class="fas fa-cogs me-2"></i>
                    <p>Serviços</p>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>/contratos">
                    <i class="fas fa-file-contract me-2"></i>
                    <p>Contratos</p>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>/kanban">
                    <i class="fas fa-columns me-2"></i>
                    <p>Kanban</p>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="<?php echo BASE_URL; ?>/configuracoes">
                    <i class="fas fa-cog me-2"></i>
                    <p>Configurações</p>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Conteúdo Principal -->
    <div class="content">
        <!-- Cabeçalho -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="d-flex align-items-center">
                <!-- Botão Push Menu -->
                <button class="push-menu-btn" id="pushMenu">
                    <i class="fas fa-bars"></i>
                </button>
                
                <h2 class="mb-0" style="color: var(--text-primary);">
                    <?php echo $pageTitle ?? 'Dashboard'; ?>
                </h2>
            </div>
            
            <div class="d-flex align-items-center gap-3">
                <!-- Botão de Tema -->
                <button class="theme-toggle" id="themeToggle">
                    <i class="fas fa-sun"></i>
                </button>
                
                <!-- Notificações -->
                <div class="dropdown">
                    <button class="theme-toggle" data-bs-toggle="dropdown">
                        <i class="fas fa-bell"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu-end">
                        <div class="dropdown-header">Notificações</div>
                        <a class="dropdown-item" href="#">Nenhuma notificação</a>
                    </div>
                </div>
                
                <!-- Usuário -->
                <div class="dropdown">
                    <button class="theme-toggle" data-bs-toggle="dropdown">
                        <i class="fas fa-user"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu-end">
                        <div class="dropdown-header">Administrador</div>
                        <a class="dropdown-item" href="#">Perfil</a>
                        <a class="dropdown-item" href="#">Configurações</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Sair</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Mensagens de Erro -->
        <?php if (isset($erro)): ?>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <?php echo $erro; ?>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <?php endif; ?>

        <!-- Conteúdo da Página -->
        <?php echo $content; ?>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Ativa o item do menu correspondente à página atual
        document.addEventListener('DOMContentLoaded', function() {
            const currentPath = window.location.pathname;
            const menuItems = document.querySelectorAll('.nav-link');
            
            menuItems.forEach(item => {
                if (currentPath.includes(item.getAttribute('href'))) {
                    item.classList.add('active');
                }
            });
            
            // Gerenciamento do tema
            const themeToggle = document.getElementById('themeToggle');
            const html = document.documentElement;
            const icon = themeToggle.querySelector('i');
            
            // Carrega o tema salvo
            const savedTheme = localStorage.getItem('theme') || 'dark';
            html.setAttribute('data-bs-theme', savedTheme);
            updateThemeIcon(savedTheme);
            
            themeToggle.addEventListener('click', () => {
                const currentTheme = html.getAttribute('data-bs-theme');
                const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                
                html.setAttribute('data-bs-theme', newTheme);
                localStorage.setItem('theme', newTheme);
                updateThemeIcon(newTheme);
            });
            
            function updateThemeIcon(theme) {
                icon.className = theme === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
            }
            
            // Funcionalidade do Push Menu
            const pushMenu = document.getElementById('pushMenu');
            const body = document.body;
            
            // Carrega o estado do sidebar
            const sidebarState = localStorage.getItem('sidebar-collapsed') === 'true';
            if (sidebarState) {
                body.classList.add('sidebar-collapse');
            }
            
            pushMenu.addEventListener('click', function() {
                body.classList.toggle('sidebar-collapse');
                // Salva o estado do sidebar
                localStorage.setItem('sidebar-collapsed', body.classList.contains('sidebar-collapse'));
            });
        });
    </script>
</body>
</html>

----------------------------------

